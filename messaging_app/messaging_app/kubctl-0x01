#!/usr/bin/env bash
# kubctl-0x01 — Scale Django app on Kubernetes and test it

set -euo pipefail

DEPLOYMENT_NAME="messaging-app-deployment"
SERVICE_NAME="messaging-app-service"
NAMESPACE="default"

echo "⚡ Scaling $DEPLOYMENT_NAME to 3 replicas..."
kubectl scale deployment $DEPLOYMENT_NAME --replicas=3 -n $NAMESPACE

echo "⏳ Waiting for pods to be ready..."
kubectl rollout status deployment/$DEPLOYMENT_NAME -n $NAMESPACE

echo "📦 Current pods:"
kubectl get pods -l app=messaging-app -n $NAMESPACE

echo "🔍 Verifying service:"
kubectl get svc $SERVICE_NAME -n $NAMESPACE

# Port-forward service so wrk can send traffic
echo "🔗 Port-forwarding service on localhost:8000..."
kubectl port-forward svc/$SERVICE_NAME 8000:8000 -n $NAMESPACE &
PF_PID=$!
sleep 5  # give port-forward time to establish

# Load testing with wrk (if installed)
if command -v wrk &> /dev/null
then
    echo "🚀 Running load test with wrk..."
    wrk -t2 -c50 -d15s http://127.0.0.1:8000/
else
    echo "⚠️ wrk is not installed. Please install it:"
    echo "👉 https://github.com/wg/wrk"
fi

# Monitor resource usage (requires metrics-server in cluster)
echo "📊 Monitoring resource usage..."
if kubectl top pods &> /dev/null
then
    kubectl top pods -n $NAMESPACE
else
    echo "⚠️ kubectl top not available (install metrics-server in your cluster)."
fi

# Kill port-forward background process
kill $PF_PID 2>/dev/null || true

echo "🎉 Scaling and testing complete."
